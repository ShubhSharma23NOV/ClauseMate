{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Get dashboard overview data\nexport const getDashboardOverview = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/overview`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n  }\n};\n\n// Get document status distribution\nexport const getDocumentStatus = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/document-status`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n  }\n};\n\n// Get weekly uploads\nexport const getWeeklyUploads = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/weekly-uploads`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n  }\n};\n\n// Mark notification as read\nexport const markNotificationAsRead = async notificationId => {\n  try {\n    const response = await axios.put(`${API_URL}/notifications/${notificationId}/read`, {}, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getDashboardOverview","response","get","headers","Authorization","localStorage","getItem","data","error","_error$response","message","getDocumentStatus","_error$response2","getWeeklyUploads","_error$response3","markNotificationAsRead","notificationId","put","_error$response4"],"sources":["/Users/shubhsharma/Downloads/clauseMate/frontend/src/services/dashboardService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Get dashboard overview data\nexport const getDashboardOverview = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/overview`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Get document status distribution\nexport const getDocumentStatus = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/document-status`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Get weekly uploads\nexport const getWeeklyUploads = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/weekly-uploads`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n};\n\n// Mark notification as read\nexport const markNotificationAsRead = async (notificationId) => {\n  try {\n    const response = await axios.put(\n      `${API_URL}/notifications/${notificationId}/read`,\n      {},\n      {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || error.message;\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,qBAAqB,EAAE;MAChEO,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,4BAA4B,EAAE;MACvEO,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAI,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACP,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,2BAA2B,EAAE;MACtEO,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAN,KAAK,CAACP,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,sBAAsB,GAAG,MAAOC,cAAc,IAAK;EAC9D,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMN,KAAK,CAACsB,GAAG,CAC9B,GAAGrB,OAAO,kBAAkBoB,cAAc,OAAO,EACjD,CAAC,CAAC,EACF;MACEb,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CACF,CAAC;IACD,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAU,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAV,KAAK,CAACP,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}