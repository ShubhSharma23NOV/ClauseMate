{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from \"react\";\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE;\n  return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = toastId => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: actionTypes.REMOVE_TOAST,\n      toastId: toastId\n    });\n  }, TOAST_REMOVE_DELAY);\n  toastTimeouts.set(toastId, timeout);\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)\n      };\n    case actionTypes.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map(t => t.id === action.toast.id ? {\n          ...t,\n          ...action.toast\n        } : t)\n      };\n    case actionTypes.DISMISS_TOAST:\n      {\n        const {\n          toastId\n        } = action;\n\n        // ! Side effects ! - This could be extracted into a dismissToast() action,\n        // but I'll keep it here for simplicity\n        if (toastId) {\n          addToRemoveQueue(toastId);\n        } else {\n          state.toasts.forEach(toast => {\n            addToRemoveQueue(toast.id);\n          });\n        }\n        return {\n          ...state,\n          toasts: state.toasts.map(t => t.id === toastId || toastId === undefined ? {\n            ...t,\n            open: false\n          } : t)\n        };\n      }\n    case actionTypes.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: []\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter(t => t.id !== action.toastId)\n      };\n  }\n};\nconst listeners = [];\nlet memoryState = {\n  toasts: []\n};\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach(listener => {\n    listener(memoryState);\n  });\n}\nfunction toast({\n  ...props\n}) {\n  const id = genId();\n  const update = props => dispatch({\n    type: actionTypes.UPDATE_TOAST,\n    toast: {\n      ...props,\n      id\n    }\n  });\n  const dismiss = () => dispatch({\n    type: actionTypes.DISMISS_TOAST,\n    toastId: id\n  });\n  dispatch({\n    type: actionTypes.ADD_TOAST,\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: open => {\n        if (!open) dismiss();\n      }\n    }\n  });\n  return {\n    id: id,\n    dismiss,\n    update\n  };\n}\nfunction useToast() {\n  _s();\n  const [state, setState] = React.useState(memoryState);\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n  return {\n    ...state,\n    toast,\n    dismiss: toastId => dispatch({\n      type: actionTypes.DISMISS_TOAST,\n      toastId\n    })\n  };\n}\n_s(useToast, \"SPWE98mLGnlsnNfIwu/IAKTSZtk=\");\nexport { useToast, toast };","map":{"version":3,"names":["React","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_VALUE","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","setTimeout","delete","dispatch","type","set","reducer","state","action","toasts","toast","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","useToast","_s","setState","useState","useEffect","push","index","indexOf","splice"],"sources":["/Users/shubhsharma/clausematefrontend/src/components/ui/use-toast.js"],"sourcesContent":["import * as React from \"react\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n}\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\nconst toastTimeouts = new Map()\n\nconst addToRemoveQueue = (toastId) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: actionTypes.REMOVE_TOAST,\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case actionTypes.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case actionTypes.DISMISS_TOAST: {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case actionTypes.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners = []\n\nlet memoryState = { toasts: [] }\n\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\nfunction toast({ ...props }) {\n  const id = genId()\n\n  const update = (props) =>\n    dispatch({\n      type: actionTypes.UPDATE_TOAST,\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id })\n\n  dispatch({\n    type: actionTypes.ADD_TOAST,\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\n  }\n}\n\nexport { useToast, toast } "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}